-- Script de diagnostic et correction complète de la table logs
-- Exécutez ceci dans votre Dashboard Supabase > SQL Editor

-- 1. Vérifier la structure actuelle de la table logs
SELECT 'Structure actuelle de la table logs:' as info;
SELECT column_name, data_type, is_nullable, column_default
FROM information_schema.columns 
WHERE table_name = 'logs' AND table_schema = 'public'
ORDER BY ordinal_position;

-- 2. Si la table existe mais avec une structure incomplète, l'ajuster
-- Si elle n'existe pas du tout, la créer

-- Créer ou recréer la table logs avec la structure complète
DROP TABLE IF EXISTS logs CASCADE;

CREATE TABLE logs (
    id UUID PRIMARY KEY DEFAULT gen_random_uuid(),
    action VARCHAR(50) NOT NULL,
    table_name VARCHAR(100),
    record_id VARCHAR(255),
    old_values TEXT,
    new_values TEXT,
    user_info JSONB,
    timestamp TIMESTAMPTZ DEFAULT NOW(),
    details TEXT,
    created_at TIMESTAMPTZ DEFAULT NOW(),
    updated_at TIMESTAMPTZ DEFAULT NOW()
);

-- 3. Ajouter des commentaires sur les colonnes
COMMENT ON TABLE logs IS 'Journal d''activité de l''application';
COMMENT ON COLUMN logs.action IS 'Type d''action: CREATE, UPDATE, DELETE, LOGIN, LOGOUT';
COMMENT ON COLUMN logs.table_name IS 'Nom de la table affectée';
COMMENT ON COLUMN logs.record_id IS 'ID de l''enregistrement affecté';
COMMENT ON COLUMN logs.old_values IS 'Anciennes valeurs (JSON) avant modification';
COMMENT ON COLUMN logs.new_values IS 'Nouvelles valeurs (JSON) après modification';
COMMENT ON COLUMN logs.user_info IS 'Informations sur l''utilisateur (JSON)';
COMMENT ON COLUMN logs.details IS 'Détails supplémentaires sur l''action';

-- 4. Créer des index pour les performances
CREATE INDEX idx_logs_action ON logs(action);
CREATE INDEX idx_logs_table_name ON logs(table_name);
CREATE INDEX idx_logs_timestamp ON logs(timestamp);
CREATE INDEX idx_logs_record_id ON logs(record_id);

-- 5. Activer RLS (Row Level Security) si nécessaire
ALTER TABLE logs ENABLE ROW LEVEL SECURITY;

-- 6. Politique RLS simple (à ajuster selon vos besoins)
CREATE POLICY "Allow all operations for authenticated users" ON logs
    FOR ALL USING (true);

-- 7. Vérifier la nouvelle structure
SELECT 'Nouvelle structure de la table logs:' as info;
SELECT column_name, data_type, is_nullable, column_default
FROM information_schema.columns 
WHERE table_name = 'logs' AND table_schema = 'public'
ORDER BY ordinal_position;

-- 8. Insérer un log de test
INSERT INTO logs (action, table_name, record_id, details) 
VALUES ('TEST', 'logs', 'test-id', 'Test de la nouvelle structure de table');

SELECT 'Log de test inséré avec succès!' as result;
